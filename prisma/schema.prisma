// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// SQLite로 프리즈마를 초기화하고 유저, 트윗, 좋아요 모델을 생성합니다.
// User 모델에는 username, password, email, bio, created_at updated_at 필드가 있어야 합니다.
model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  email String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Tweet Tweet[]
  Like Like[]
}
// Tweet 모델에는 tweet, created_at 및 updated_at 필드가 있어야 합니다. 또한 User 와의 관계가 있어야 합니다.
model Tweet {
  id Int @id @default(autoincrement())
  tweet String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId Int
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  Like Like[]
}
// Like 모델에는 created_at 필드가 있어야 하며 User 및 Tweet과의 관계가 있어야 합니다.
model Like {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  userId Int
  tweetId Int
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade) 
}
// 모든 모델에는 primary key 가 있어야 합니다.
